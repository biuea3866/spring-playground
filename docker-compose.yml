services:
  mysql-master:
    image: mysql:8.0
    container_name: mysql-master
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: master_root_password
      MYSQL_DATABASE: master_db
    ports:
      - "3306:3306"
    volumes:
      - master-data:/var/lib/mysql
    command: ["--server-id=1", "--log-bin=/var/lib/mysql/mysql-bin.log", "--binlog-format=ROW", "--default-authentication-plugin=mysql_native_password"]

  mysql-slave-1:
    image: mysql:8.0
    container_name: mysql-slave-1
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: slave_root_password
    depends_on:
      - mysql-master
    volumes:
      - slave1-data:/var/lib/mysql
    command: ["--server-id=2", "--default-authentication-plugin=mysql_native_password"]

  mysql-slave-2:
    image: mysql:8.0
    container_name: mysql-slave-2
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: slave_root_password
    depends_on:
      - mysql-master
    volumes:
      - slave2-data:/var/lib/mysql
    command: ["--server-id=3", "--default-authentication-plugin=mysql_native_password"]

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  # Redis Node 1
  redis-node-1:
    image: redis:6.2-alpine
    container_name: redis-node-1
    command: ["redis-server", "--port", "6379", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data1:/data

  # Redis Node 2
  redis-node-2:
    image: redis:6.2-alpine
    container_name: redis-node-2
    command: ["redis-server", "--port", "6380", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - "6380:6379"
    volumes:
      - redis-data2:/data

  # Redis Node 3
  redis-node-3:
    image: redis:6.2-alpine
    container_name: redis-node-3
    command: ["redis-server", "--port", "6381", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - "6381:6379"
    volumes:
      - redis-data3:/data

  table-gateway:
    build:
      context: .
      dockerfile: table-reservation/table-gateway/Dockerfile
    container_name: table-gateway
    depends_on:
      - mysql-master
      - redis-node-1
    environment:
      SPRING_DATASOURCE_MASTER_URL: jdbc:mysql://mysql-master:3306/master_db?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_MASTER_USERNAME: root
      SPRING_DATASOURCE_MASTER_PASSWORD: master_root_password
      SPRING_DATASOURCE_SLAVE_URL: jdbc:mysql://mysql-slave-1:3306/master_db?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_SLAVE_USERNAME: root
      SPRING_DATASOURCE_SLAVE_PASSWORD: slave_root_password
      SPRING_REDIS_CLUSTER_NODES: redis-node-1:6379,redis-node-2:6380,redis-node-3:6381
      JWT_KEY: asmnzxm,cn123kljhjasldk!@!sacxzcxzcsadasd
    ports:
      - "8080:8080"

  table-auth:
    build:
      context: .
      dockerfile: table-reservation/table-auth/Dockerfile
    container_name: table-auth
    depends_on:
      - mysql-master
      - redis-node-1
    environment:
      SPRING_DATASOURCE_MASTER_URL: jdbc:mysql://mysql-master:3306/master_db?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_MASTER_USERNAME: root
      SPRING_DATASOURCE_MASTER_PASSWORD: master_root_password
      SPRING_DATASOURCE_SLAVE_URL: jdbc:mysql://mysql-slave-1:3306/master_db?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_SLAVE_USERNAME: root
      SPRING_DATASOURCE_SLAVE_PASSWORD: slave_root_password
      SPRING_REDIS_CLUSTER_NODES: redis-node-1:6379,redis-node-2:6380,redis-node-3:6381
      JWT_KEY: asmnzxm,cn123kljhjasldk!@!sacxzcxzcsadasd
    ports:
      - "8081:8080"

volumes:
  master-data:
  slave1-data:
  slave2-data:
  redis-data1:
  redis-data2:
  redis-data3:
